Produces-A Relationship
-------------------------------------------------

public class ProducesARelationshipTest {

	public static void main(String[] args) {
		 		 
 		GirCow cow = new GirCow(); 
 		Milk m2 = cow.milkACow(); 
 		Curd c = m2.coagulate(); 
 		Butter b = c.churn(); 
 		ClarifiedButter cf = b.boil(); 
 		 
 		cf.healthyFood(); 
 		 
 		Curd c2 = new GirCow().milkACow().coagulate(); 
 		Butter b2 = new GirCow().milkACow().coagulate().churn(); 
 		ClarifiedButter cf2 = new GirCow().milkACow().coagulate().churn().boil(); 
 		 
 		Dairy dairy = new Dairy(); 
 		ClarifiedButter cf3 = dairy.purchase(); 
 		ClarifiedButter cf4 = dairy.purchase(); 
 		ClarifiedButter cf5 = dairy.purchase(); 
 		ClarifiedButter cf6 = dairy.purchase(); 
 		 
	} 
} 
 class Dairy 
 { 
 	ClarifiedButter purchase() { 
 		GirCow cow = new GirCow(); 
 		Milk m2 = cow.milkACow(); 
 		Curd c = m2.coagulate(); 
 		Butter b = c.churn(); 
 		ClarifiedButter cf = b.boil(); 
 		return cf; 
 	} 
 } 
 
 	class Cow extends Mammal //isA 
	 { 
	 	Horn left = new Horn(); //hasA 
	 	Horn right = new Horn(); //hasA 
	 	Hump hump = new Hump(); //hasA 
	 } 
	 class GirCow extends Cow //isA 
	 { 
	 	Milk milkACow() { 
		Milk m = new Milk(); 
		return m; 
	 	} 
	} 
 class Milk 
 { 
 	Curd coagulate() { 
	Curd curd = new Curd(); 
	return curd; 
		} 
 } 
 class Curd 
 { 
 	Butter churn() { 
	Butter butter = new Butter(); 
	return butter; 
	 	} 
	 } 
	 
	 
	 class Butter 
	 { 
	 	ClarifiedButter boil() { 
		ClarifiedButter cf = new ClarifiedButter(); 
		return cf; 
	 	} 
	 } 

		 
 class ClarifiedButter 
 { 
 	void healthyFood() { 
 		System.out.println("Clarified Butter is the best for the total health...."); 
 	} 
 } 



---------------------------------------------------------------------------


class Ocean
 {
	void hasWater();
	void hasWaterAnimals();
	void hasWaterPlants();
 }
 
class WaterSpieces extends Ocean 
	{
	 LargeFish lf = new LargeFish();
	 SmallFish sf = new SmallFish();
	 Octopus oc = new Octopus();
	 Squids sq = new Squids();
	 JellyFish jf = new JellyFish();
	
	 Aquarium contains(SmallFish sf, Tortoise tor, StarFish sf) {}
	}

Class WaterPlants extends Ocean 
	{
	 Coral co = new Coral();
	 SeaGrass sg = new SeaGrass();
	 SeaWeed sw = new SeaWeed();
	 Kelp ke = new Kelp();
	 }
 
class Fish extends Sea Animals
 
{
 
	Fins f = new Fins(); //hasA
	Gills gl = new Gills(); //hasA
 	Color cl = new Color(); //hasA
	Breed br = new Breed();
 	
	SeaFood cooked(Salmon sa, Fillet fi, Crab cr, Shrimps sh, Prawns pr) {}
}
 

class Magician extends Human
 
{
 
	Magic doTrick(ScientificExperiment se)
	{
 
	Magic m = new Magic();
	return m;
 
	}
 
------------------------------------------------------------








